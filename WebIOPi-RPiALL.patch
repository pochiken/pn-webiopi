diff -urN WebIOPi-0.7.1/htdocs/webiopi.js WebIOPi-0.7.1a/htdocs/webiopi.js
--- WebIOPi-0.7.1/htdocs/webiopi.js	2014-02-24 01:37:07.000000000 +0900
+++ WebIOPi-0.7.1a/htdocs/webiopi.js	2021-01-20 22:44:26.998477987 +0900
@@ -16,6 +16,7 @@
 
 var _gaq = _gaq || [];
 var _webiopi;
+var _pins = 40;
 
 function w() {
 	if (_webiopi == undefined) {
@@ -73,7 +74,7 @@
 	this.readyCallback = null;
 	this.context = "/";
 	this.GPIO = Array(54);
-	this.PINS = Array(27);
+	this.PINS = Array(_pins+1);
 
 	this.TYPE = {
 			DNC: {value: 0, style: "DNC", label: "--"},
@@ -577,7 +578,7 @@
 RPiHeader.prototype.createTable = function (containerId) {
 	var table = $("<table>");
 	table.attr("id", "RPiHeader")
-	for (var pin=1; pin<=26; pin++) {
+	for (var pin=1; pin<=_pins; pin++) {
 		var line = 	$('<tr>');
 		line.append(this.getFunctionCell(pin))
 		line.append(this.getDescriptionCell(pin, "right"))
diff -urN WebIOPi-0.7.1/python/native/bridge.c WebIOPi-0.7.1a/python/native/bridge.c
--- WebIOPi-0.7.1/python/native/bridge.c	2013-03-17 21:56:40.000000000 +0900
+++ WebIOPi-0.7.1a/python/native/bridge.c	2021-01-20 22:50:06.920395683 +0900
@@ -28,6 +28,8 @@
 static PyObject *_InvalidDirectionException;
 static PyObject *_InvalidChannelException;
 static PyObject *_InvalidPullException;
+static PyObject *rpi_revision;
+static PyObject *board_info;
 
 static PyObject *_gpioCount;
 
@@ -49,8 +51,6 @@
 static PyObject *_pud_up;
 static PyObject *_pud_down;
 
-static PyObject *_board_revision;
-
 static char* FUNCTIONS[] = {"IN", "OUT", "ALT5", "ALT4", "ALT0", "ALT1", "ALT2", "ALT3", "PWM"};
 static char* PWM_MODES[] = {"none", "ratio", "angle"};
 
@@ -619,7 +619,7 @@
 #endif
 {
 	PyObject *module = NULL;
-	int revision = -1;
+	/* int revision = -1; */
 
 #if PY_MAJOR_VERSION > 2
 	if ((module = PyModule_Create(&python_module)) == NULL)
@@ -687,19 +687,26 @@
 	PyModule_AddObject(module, "PUD_DOWN", _pud_down);
 
 	// detect board revision and set up accordingly
-	revision = get_rpi_revision();
-	if (revision == -1)
+	if (get_rpi_info(&rpiinfo))
 	{
 		PyErr_SetString(_SetupException, "This module can only be run on a Raspberry Pi!");
 #if PY_MAJOR_VERSION > 2
-		return NULL;
+	return NULL;
 #else
-		return;
+	return;
 #endif
 	}
+	board_info = Py_BuildValue("{sissssssssss}",
+				   "P1_REVISION",rpiinfo.p1_revision,
+				   "REVISION",&rpiinfo.revision,
+        			   "TYPE",rpiinfo.type,
+				   "MANUFACTURER",rpiinfo.manufacturer,
+				   "PROCESSOR",rpiinfo.processor,
+				   "RAM",rpiinfo.ram);
+	PyModule_AddObject(module, "RPI_INFO", board_info);
 
-	_board_revision = Py_BuildValue("i", revision);
-	PyModule_AddObject(module, "BOARD_REVISION", _board_revision);
+	rpi_revision = Py_BuildValue("i", rpiinfo.p1_revision);       // deprecated
+	PyModule_AddObject(module, "BOARD_REVISION", rpi_revision);   // deprecated
 
 	if (Py_AtExit(cleanup) != 0)
 	{
diff -urN WebIOPi-0.7.1/python/native/cpuinfo.c WebIOPi-0.7.1a/python/native/cpuinfo.c
--- WebIOPi-0.7.1/python/native/cpuinfo.c	2012-10-29 06:26:10.000000000 +0900
+++ WebIOPi-0.7.1a/python/native/cpuinfo.c	2021-01-20 22:44:27.008476874 +0900
@@ -1,5 +1,5 @@
 /*
-Copyright (c) 2012 Ben Croston
+Copyright (c) 2012-2019 Ben Croston & 2021 pochinet.org
 
 Permission is hereby granted, free of charge, to any person obtaining a copy of
 this software and associated documentation files (the "Software"), to deal in
@@ -20,46 +20,253 @@
 SOFTWARE.
 */
 
+/* See the following for up to date information:
+ * https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md
+ */
+
 #include <stdio.h>
+#include <stdint.h>
+#include <stdlib.h>
 #include <string.h>
+#include <arpa/inet.h>
 #include "cpuinfo.h"
 
-char *get_cpuinfo_revision(char *revision)
+int get_rpi_info(rpi_info *info)
 {
    FILE *fp;
    char buffer[1024];
    char hardware[1024];
-   int  rpi_found = 0;
-
-   if ((fp = fopen("/proc/cpuinfo", "r")) == NULL)
-      return 0;
+   char revision[1024];
+   int found = 0;
+   int len;
 
-   while(!feof(fp)) {
-      fgets(buffer, sizeof(buffer) , fp);
-      sscanf(buffer, "Hardware	: %s", hardware);
-      if (strcmp(hardware, "BCM2708") == 0)
-         rpi_found = 1;
-      sscanf(buffer, "Revision	: %s", revision);
+   if ((fp = fopen("/proc/device-tree/system/linux,revision", "r"))) {
+      uint32_t n;
+      if (fread(&n, sizeof(n), 1, fp) != 1) {
+         fclose(fp);
+         return -1;
+      }
+      sprintf(revision, "%x", ntohl(n));
+      found = 1;
+   }
+   else if ((fp = fopen("/proc/cpuinfo", "r"))) {
+      while(!feof(fp) && fgets(buffer, sizeof(buffer), fp)) {
+         sscanf(buffer, "Hardware	: %s", hardware);
+         if (strcmp(hardware, "BCM2708") == 0 ||
+             strcmp(hardware, "BCM2709") == 0 ||
+             strcmp(hardware, "BCM2835") == 0 ||
+             strcmp(hardware, "BCM2836") == 0 ||
+             strcmp(hardware, "BCM2837") == 0 ||
+             strcmp(hardware, "BCM2711") == 0 ) {
+            found = 1;
+         }
+         sscanf(buffer, "Revision	: %s", revision);
+      }
    }
+   else
+      return -1;
    fclose(fp);
 
-   if (!rpi_found)
-      revision = NULL;
-   return revision;
-}
+   if (!found)
+      return -1;
 
-int get_rpi_revision(void)
-{
-   char revision[1024] = {'\0'};
-   
-   if (get_cpuinfo_revision(revision) == NULL)
+   if ((len = strlen(revision)) == 0)
       return -1;
-      
-   if ((strcmp(revision, "0002") == 0) ||
-       (strcmp(revision, "1000002") == 0 ) ||
-       (strcmp(revision, "0003") == 0) ||
-       (strcmp(revision, "1000003") == 0 ))
-      return 1;
-   else // assume rev 2 (0004 0005 0006 1000004 1000005 1000006)
-      return 2;
+
+   if (len >= 6 && strtol((char[]){revision[len-6],0}, NULL, 16) & 8) {
+      // new scheme
+      //info->rev = revision[len-1]-'0';
+      strcpy(info->revision, revision);
+      switch (revision[len-3]) {
+         case '0' :
+            switch (revision[len-2]) {
+               case '0': info->type = "Model A"; info->p1_revision = 2; break;
+               case '1': info->type = "Model B"; info->p1_revision = 2; break;
+               case '2': info->type = "Model A+"; info->p1_revision = 3; break;
+               case '3': info->type = "Model B+"; info->p1_revision = 3; break;
+               case '4': info->type = "Pi 2 Model B"; info->p1_revision = 3; break;
+               case '5': info->type = "Alpha"; info->p1_revision = 3; break;
+               case '6': info->type = "Compute Module 1"; info->p1_revision = 0; break;
+               case '8': info->type = "Pi 3 Model B"; info->p1_revision = 3; break;
+               case '9': info->type = "Zero"; info->p1_revision = 3; break;
+               case 'a': info->type = "Compute Module 3"; info->p1_revision = 0; break;
+               case 'c': info->type = "Zero W"; info->p1_revision = 3; break;
+               case 'd': info->type = "Pi 3 Model B+"; info->p1_revision = 3; break;
+               case 'e': info->type = "Pi 3 Model A+"; info->p1_revision = 3; break;
+               default : info->type = "Unknown"; info->p1_revision = 3; break;
+            } break;
+         case '1':
+            switch (revision[len-2]) {
+               case '0': info->type = "Compute Module 3+"; info->p1_revision = 0; break;
+               case '1': info->type = "Pi 4 Model B"; info->p1_revision = 3; break;
+               case '3': info->type = "Raspberry Pi 400"; info->p1_revision = 3; break;
+               case '4': info->type = "Compute Mudule 4"; info->p1_revision = 0; break;
+               default : info->type = "Unknown"; info->p1_revision = 3; break;
+            } break;
+         default: info->type = "Unknown"; info->p1_revision = 3; break;
+      }
+
+      switch (revision[len-4]) {
+         case '0': info->processor = "BCM2835"; break;
+         case '1': info->processor = "BCM2836"; break;
+         case '2': info->processor = "BCM2837"; break;
+         case '3': info->processor = "BCM2711"; break;
+         default : info->processor = "Unknown"; break;
+      }
+      switch (revision[len-5]) {
+         case '0': info->manufacturer = "Sony UK"; break;
+         case '1': info->manufacturer = "Egoman"; break;
+         case '2': info->manufacturer = "Embest"; break;
+         case '3': info->manufacturer = "Sony Japan"; break;
+         case '4': info->manufacturer = "Embest"; break;
+         case '5': info->manufacturer = "Stadium"; break;
+         default : info->manufacturer = "Unknown"; break;
+      }
+      switch (strtol((char[]){revision[len-6],0}, NULL, 16) & 7) {
+         case 0: info->ram = "256M"; break;
+         case 1: info->ram = "512M"; break;
+         case 2: info->ram = "1G"; break;
+         case 3: info->ram = "2G"; break;
+         case 4: info->ram = "4G"; break;
+         case 5: info->ram = "8G"; break;
+         default: info->ram = "Unknown"; break;
+      }
+   } else {
+      // old scheme
+      info->ram = "Unknown";
+      info->manufacturer = "Unknown";
+      info->processor = "Unknown";
+      info->type = "Unknown";
+      strcpy(info->revision, revision);
+
+      uint64_t rev;
+      sscanf(revision, "%llx", &rev);
+      rev = rev & 0xefffffff;       // ignore preceeding 1000 for overvolt
+
+      if (rev == 0x0002 || rev == 0x0003) {
+         info->type = "Model B";
+         info->p1_revision = 1;
+         info->ram = "256M";
+         info->manufacturer = "Egoman";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0004) {
+         info->type = "Model B";
+         info->p1_revision = 2;
+         info->ram = "256M";
+         info->manufacturer = "Sony UK";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0005) {
+         info->type = "Model B";
+         info->p1_revision = 2;
+         info->ram = "256M";
+         info->manufacturer = "Qisda";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0006) {
+         info->type = "Model B";
+         info->p1_revision = 2;
+         info->ram = "256M";
+         info->manufacturer = "Egoman";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0007) {
+         info->type = "Model A";
+         info->p1_revision = 2;
+         info->ram = "256M";
+         info->manufacturer = "Egoman";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0008) {
+         info->type = "Model A";
+         info->p1_revision = 2;
+         info->ram = "256M";
+         info->manufacturer = "Sony UK";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0009) {
+         info->type = "Model A";
+         info->p1_revision = 2;
+         info->ram = "256M";
+         info->manufacturer = "Qisda";
+         info->processor = "BCM2835";
+      } else if (rev == 0x000d) {
+         info->type = "Model B";
+         info->p1_revision = 2;
+         info->ram = "512M";
+         info->manufacturer = "Egoman";
+         info->processor = "BCM2835";
+      } else if (rev == 0x000e) {
+         info->type = "Model B";
+         info->p1_revision = 2;
+         info->ram = "512M";
+         info->manufacturer = "Sony UK";
+         info->processor = "BCM2835";
+      } else if (rev == 0x000f) {
+         info->type = "Model B";
+         info->p1_revision = 2;
+         info->ram = "512M";
+         info->manufacturer = "Egoman";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0010) {
+         info->type = "Model B+";
+         info->p1_revision = 3;
+         info->ram = "512M";
+         info->manufacturer = "Sony UK";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0011) {
+         info->type = "Compute Module 1";
+         info->p1_revision = 0;
+         info->ram = "512M";
+         info->manufacturer = "Sony UK";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0012) {
+         info->type = "Model A+";
+         info->p1_revision = 3;
+         info->ram = "256M";
+         info->manufacturer = "Sony UK";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0013) {
+         info->type = "Model B+";
+         info->p1_revision = 3;
+         info->ram = "512M";
+         info->manufacturer = "Embest";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0014) {
+         info->type = "Compute Module 1";
+         info->p1_revision = 0;
+         info->ram = "512M";
+         info->manufacturer = "Embest";
+         info->processor = "BCM2835";
+      } else if (rev == 0x0015) {
+         info->type = "Model A+";
+         info->p1_revision = 3;
+         info->ram = "Unknown";
+         info->manufacturer = "Embest";
+         info->processor = "BCM2835";
+      } else {  // don't know - assume revision 3 p1 connector
+         info->p1_revision = 3;
+      }
+   }
+   return 0;
 }
+
+/*
+
+32 bits
+NEW                   23: will be 1 for the new scheme, 0 for the old scheme
+MEMSIZE             20: 0=256M 1=512M 2=1G
+MANUFACTURER  16: 0=SONY 1=EGOMAN
+PROCESSOR         12: 0=2835 1=2836
+TYPE                   04: 0=MODELA 1=MODELB 2=MODELA+ 3=MODELB+ 4=Pi2 MODEL B 5=ALPHA 6=CM
+REV                     00: 0=REV0 1=REV1 2=REV2
+
+pi2 = 1<<23 | 2<<20 | 1<<12 | 4<<4 = 0xa01040
+
+--------------------
+
+SRRR MMMM PPPP TTTT TTTT VVVV
+
+S scheme (0=old, 1=new)
+R RAM (0=256, 1=512, 2=1024)
+M manufacturer (0='SONY',1='EGOMAN',2='EMBEST',3='UNKNOWN',4='EMBEST')
+P processor (0=2835, 1=2836 2=2837)
+T type (0='A', 1='B', 2='A+', 3='B+', 4='Pi 2 B', 5='Alpha', 6='Compute Module')
+V revision (0-15)
+
+*/
diff -urN WebIOPi-0.7.1/python/native/cpuinfo.h WebIOPi-0.7.1a/python/native/cpuinfo.h
--- WebIOPi-0.7.1/python/native/cpuinfo.h	2012-10-29 06:26:10.000000000 +0900
+++ WebIOPi-0.7.1a/python/native/cpuinfo.h	2021-01-20 22:52:39.270525741 +0900
@@ -1,5 +1,5 @@
 /*
-Copyright (c) 2012 Ben Croston
+Copyright (c) 2012-2015 Ben Croston
 
 Permission is hereby granted, free of charge, to any person obtaining a copy of
 this software and associated documentation files (the "Software"), to deal in
@@ -20,4 +20,18 @@
 SOFTWARE.
 */
 
-int get_rpi_revision(void);
+#ifndef CPUINFO_H
+#define CPUINFO_H
+typedef struct
+{
+   int p1_revision;
+   char *ram;
+   char *manufacturer;
+   char *processor;
+   char *type;
+   char revision[1024];
+} rpi_info;
+#endif /* CPUINFO_H */
+
+int get_rpi_info(rpi_info *info);
+rpi_info rpiinfo;
diff -urN WebIOPi-0.7.1/python/native/gpio.c WebIOPi-0.7.1a/python/native/gpio.c
--- WebIOPi-0.7.1/python/native/gpio.c	2013-02-04 07:04:18.000000000 +0900
+++ WebIOPi-0.7.1a/python/native/gpio.c	2021-01-20 22:45:44.861270246 +0900
@@ -20,17 +20,18 @@
 SOFTWARE.
 */
 
+#include <stdio.h>
 #include <stdint.h>
 #include <stdlib.h>
 #include <string.h>
 #include <fcntl.h>
+#include <unistd.h>
 #include <sys/mman.h>
 #include <time.h>
 #include <pthread.h>
 #include "gpio.h"
+#include "cpuinfo.h"
 
-#define BCM2708_PERI_BASE   0x20000000
-#define GPIO_BASE           (BCM2708_PERI_BASE + 0x200000)
 #define FSEL_OFFSET         0   // 0x0000
 #define SET_OFFSET          7   // 0x001c / 4
 #define CLR_OFFSET          10  // 0x0028 / 4
@@ -43,6 +44,11 @@
 #define PULLUPDN_OFFSET     37  // 0x0094 / 4
 #define PULLUPDNCLK_OFFSET  38  // 0x0098 / 4
 
+#define PULLUPDN_OFFSET_2711_0      57
+#define PULLUPDN_OFFSET_2711_1      58
+#define PULLUPDN_OFFSET_2711_2      59
+#define PULLUPDN_OFFSET_2711_3      60
+
 #define PAGE_SIZE  (4*1024)
 #define BLOCK_SIZE (4*1024)
 
@@ -83,7 +89,31 @@
     if ((uint32_t)gpio_mem % PAGE_SIZE)
         gpio_mem += PAGE_SIZE - ((uint32_t)gpio_mem % PAGE_SIZE);
 
-    gpio_map = (uint32_t *)mmap( (caddr_t)gpio_mem, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_FIXED, mem_fd, GPIO_BASE);
+    char buffer[12];
+    const char *ranges_file = "/proc/device-tree/soc/ranges";
+    int info_fd = open(ranges_file, O_RDONLY);
+
+    if (info_fd < 0) {
+        fprintf(stderr, "cannot open: %s", ranges_file);
+        return SETUP_MMAP_FAIL;
+    }
+
+    ssize_t n = read(info_fd, buffer, sizeof(buffer));
+    close(info_fd);
+
+    if (n < 8) {
+        fprintf(stderr, "cannot read base address: %s", ranges_file);
+        return SETUP_MMAP_FAIL;
+    }
+
+    uint32_t gpio_offset = 0x00200000;
+    uint32_t gpio_base =  (buffer[4] << 24) + (buffer[5] << 16) + (buffer[6] << 8) + (buffer[7] << 0) + gpio_offset;
+
+    if (gpio_base == gpio_offset) {
+        gpio_base =  (buffer[8] << 24) + (buffer[9] << 16) + (buffer[10] << 8) + (buffer[11] << 0) + gpio_offset;
+    }
+
+    gpio_map = (uint32_t *)mmap( (caddr_t)gpio_mem, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_FIXED, mem_fd, gpio_base);
 
     if ((uint32_t)gpio_map < 0)
         return SETUP_MMAP_FAIL;
@@ -93,21 +123,44 @@
 
 void set_pullupdn(int gpio, int pud)
 {
-    int clk_offset = PULLUPDNCLK_OFFSET + (gpio/32);
-    int shift = (gpio%32);
-    
-    if (pud == PUD_DOWN)
-       *(gpio_map+PULLUPDN_OFFSET) = (*(gpio_map+PULLUPDN_OFFSET) & ~3) | PUD_DOWN;
-    else if (pud == PUD_UP)
-       *(gpio_map+PULLUPDN_OFFSET) = (*(gpio_map+PULLUPDN_OFFSET) & ~3) | PUD_UP;
-    else  // pud == PUD_OFF
-       *(gpio_map+PULLUPDN_OFFSET) &= ~3;
-    
-    short_wait();
-    *(gpio_map+clk_offset) = 1 << shift;
-    short_wait();
-    *(gpio_map+PULLUPDN_OFFSET) &= ~3;
-    *(gpio_map+clk_offset) = 0;
+    // Check GPIO register
+    int is2711 = *(gpio_map+PULLUPDN_OFFSET_2711_3) != 0x6770696f;
+    if (is2711) {
+        // Pi 4 Pull-up/down method
+       int pullreg = PULLUPDN_OFFSET_2711_0 + (gpio >> 4);
+       int pullshift = (gpio & 0xf) << 1;
+       unsigned int pullbits;
+       unsigned int pull = 0;
+       if (pud == PUD_DOWN){
+           pull = 2;
+        } else
+        if (pud == PUD_UP){
+           pull = 1;
+        }
+        pullbits = *(gpio_map + pullreg);
+        pullbits &= ~(3 << pullshift);
+        pullbits |= (pull << pullshift);
+        *(gpio_map + pullreg) = pullbits;
+    }
+    else
+    {
+        // Legacy Pull-up/down method
+        int clk_offset = PULLUPDNCLK_OFFSET + (gpio/32);
+        int shift = (gpio%32);
+
+        if (pud == PUD_DOWN)
+            *(gpio_map+PULLUPDN_OFFSET) = (*(gpio_map+PULLUPDN_OFFSET) & ~3) | PUD_DOWN;
+        else if (pud == PUD_UP)
+            *(gpio_map+PULLUPDN_OFFSET) = (*(gpio_map+PULLUPDN_OFFSET) & ~3) | PUD_UP;
+        else  // pud == PUD_OFF
+            *(gpio_map+PULLUPDN_OFFSET) &= ~3;
+
+        short_wait();
+        *(gpio_map+clk_offset) = 1 << shift;
+        short_wait();
+        *(gpio_map+PULLUPDN_OFFSET) &= ~3;
+        *(gpio_map+clk_offset) = 0;
+    }
 }
 
 //updated Eric PTAK - trouch.com
diff -urN WebIOPi-0.7.1/python/webiopi/protocols/http.py WebIOPi-0.7.1a/python/webiopi/protocols/http.py
--- WebIOPi-0.7.1/python/webiopi/protocols/http.py	2014-02-22 07:31:18.000000000 +0900
+++ WebIOPi-0.7.1a/python/webiopi/protocols/http.py	2021-01-20 22:44:27.018475844 +0900
@@ -194,13 +194,23 @@
         
         (contentType, encoding) = mime.guess_type(path)
         f = codecs.open(path, encoding=encoding)
-        data = f.read()
+        try:
+            data = f.read()
+        except UnicodeDecodeError:
+            f.close()
+            f = codecs.open(path, mode='rb', encoding=encoding)
+            data = f.read()
         f.close()
         self.send_response(200)
         self.send_header("Content-Type", contentType);
-        self.send_header("Content-Length", os.path.getsize(realPath))
-        self.end_headers()
-        self.wfile.write(data)
+        try:
+            self.send_header("Content-Length", len(data.encode()))
+            self.end_headers()
+            self.wfile.write(data.encode())
+        except AttributeError:
+            self.send_header("Content-Length", os.path.getsize(realPath))
+            self.end_headers()
+            self.wfile.write(data)
         self.logRequest(200)
         
     def processRequest(self):
diff -urN WebIOPi-0.7.1/python/webiopi/utils/thread.py WebIOPi-0.7.1a/python/webiopi/utils/thread.py
--- WebIOPi-0.7.1/python/webiopi/utils/thread.py	2013-04-18 06:41:06.000000000 +0900
+++ WebIOPi-0.7.1a/python/webiopi/utils/thread.py	2021-01-20 22:44:27.018475844 +0900
@@ -33,14 +33,14 @@
             task.stop()
                 
 
-def runLoop(func=None, async=False):
+def runLoop(func=None, l_async=False):
     global RUNNING
     RUNNING = True
     signal.signal(signal.SIGINT, stop)
     signal.signal(signal.SIGTERM, stop)
 
     if func != None:
-        if async:
+        if l_async:
             TASKS.append(Task(func, True))
         else:
             while RUNNING:
diff -urN WebIOPi-0.7.1/python/webiopi/utils/version.py WebIOPi-0.7.1a/python/webiopi/utils/version.py
--- WebIOPi-0.7.1/python/webiopi/utils/version.py	2015-02-05 05:21:44.000000000 +0900
+++ WebIOPi-0.7.1a/python/webiopi/utils/version.py	2021-01-20 22:44:27.018475844 +0900
@@ -1,14 +1,15 @@
 import re
 import sys
 
-VERSION         = '0.7.1'
+VERSION         = '0.7.1a'
 VERSION_STRING  = "WebIOPi/%s/Python%d.%d" % (VERSION, sys.version_info.major, sys.version_info.minor)
 PYTHON_MAJOR    = sys.version_info.major
 BOARD_REVISION  = 0
 
-_MAPPING = [[], [], []]
+_MAPPING = [[], [], [], []]
 _MAPPING[1] = ["V33", "V50", 0, "V50", 1, "GND", 4, 14, "GND", 15, 17, 18, 21, "GND", 22, 23, "V33", 24, 10, "GND", 9, 25, 11, 8, "GND", 7]
 _MAPPING[2] = ["V33", "V50", 2, "V50", 3, "GND", 4, 14, "GND", 15, 17, 18, 27, "GND", 22, 23, "V33", 24, 10, "GND", 9, 25, 11, 8, "GND", 7]
+_MAPPING[3] = ["V33", "V50", 2, "V50", 3, "GND", 4, 14, "GND", 15, 17, 18, 27, "GND", 22, 23, "V33", 24, 10, "GND", 9, 25, 11, 8, "GND", 7, "DNC", "DNC" , 5, "GND", 6, 12, 13, "GND", 19, 16, 26, 20, "GND", 21]
 
 
 try:
@@ -21,8 +22,13 @@
             if hex_cpurev.startswith("1000"):
                 hex_cpurev = hex_cpurev[-4:]
             cpurev = int(hex_cpurev, 16)
-            BOARD_REVISION = 1 if (cpurev < 4) else 2
-        
+            if 0 < cpurev < 4:
+              BOARD_REVISION = 1
+            elif 3 < cpurev < 16:
+              BOARD_REVISION = 2
+            else:
+              BOARD_REVISION = 3
+
 except:
     pass
 
diff -urN WebIOPi-0.7.1/setup.sh WebIOPi-0.7.1a/setup.sh
--- WebIOPi-0.7.1/setup.sh	2015-02-05 05:21:44.000000000 +0900
+++ WebIOPi-0.7.1a/setup.sh	2021-01-20 22:45:11.527017337 +0900
@@ -79,6 +79,14 @@
 echo "Copying HTML resources..."
 mkdir /usr/share/webiopi 2>/dev/null 1>/dev/null
 cp -rfv htdocs /usr/share/webiopi
+rev16=`awk '/Revision/{printf("0x%s", substr($3, 3))}' /proc/cpuinfo`
+rev=`printf "%d\n" $rev16`
+if [ $rev -lt 16 ]; then
+	pin_val=26
+else
+	pin_val=40
+fi
+sed -i "s/\(^var _pins = \)[0-9].;/\1${pin_val};/" /usr/share/webiopi/htdocs/webiopi.js
 echo
 
 # Add config file if it does not exist
